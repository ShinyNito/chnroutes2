
name: Build chnroutes2
on:
  workflow_dispatch:
  schedule:
    - cron: "30 21 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Compare latest tags and set variables
        run: |
          upstreamLatestTagStr=$(curl -sSL --connect-timeout 5 -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/misakaio/chnroutes2/commits | grep "\"date\""|  awk 'NR == 1 { print }' | cut -d\" -f4 )
          thisLatestTag=$(curl -sSL --connect-timeout 5 -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/releases/latest | grep "tag_name" | cut -d\" -f4)
          upstreamLatestTag=$(date +%Y%m%d%H%M%S  -d $upstreamLatestTagStr)
          if [[ $upstreamLatestTag != $thisLatestTag ]]; then
            echo "NeedToSync=true" >> $GITHUB_ENV
          fi
          echo "RELEASE_NAME=$upstreamLatestTag" >> $GITHUB_ENV
          echo "TAG_NAME=$upstreamLatestTag" >> $GITHUB_ENV
        shell: bash

      - name: Checkout codebase
        uses: actions/checkout@v3
        if: ${{ env.NeedToSync }}
      # Runs a single command using the runners shell
      - name: Run Make
        if: ${{ env.NeedToSync }}
        run: make

      - name: Git push assets to "release" branch
        if: ${{ env.NeedToSync }}
        run: |
          cd release || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add release "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f release release
          
      - name: Create a release
        id: create_release
        if: ${{ env.NeedToSync }}
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ env.TAG_NAME }}
            release_name: ${{ env.RELEASE_NAME }}
            draft: false
            prerelease: false

      - name: Upload routes4.conf
        if: ${{ env.NeedToSync }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/routes4.conf
          asset_name: routes4.conf
          asset_content_type: application/octet-stream
